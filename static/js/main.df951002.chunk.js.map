{"version":3,"sources":["Containers/RegisterFormContainer.js","Containers/FormContainer.js","Components/NavBar.js","CartComponents/CartItem.js","Containers/CartContainer.js","CheckoutComponents/Payment.js","Containers/CheckOutContainer.js","RestaurantComponents/MenuItem.js","RestaurantComponents/MenuContainer.js","Containers/RestaurantContainer.js","Containers/ProfileContainer.js","Components/SearchFiles/Search.jsx","Components/SearchFiles/RestaurantCard.jsx","Components/SearchFiles/RestaurantCollection.jsx","Components/SearchFiles/SearchContainer.jsx","Containers/ConfirmationContainer.js","App.js","serviceWorker.js","index.js"],"names":["FormContainer","state","username","password","redirect","token","handleChange","e","console","log","target","name","value","setState","handleRegisterSubmit","newUser","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","json","handleResponse","response","user","localStorage","props","handleCurrentUser","alert","error","this","className","onSubmit","htmlFor","type","onChange","push","to","Component","handleLoginSubmit","logUser","NavBar","CartItem","onDeleteClick","onDeleteItem","price","onClick","CartContainer","findSubtotal","itemsInCart","reduce","a","b","toFixed","findTotal","length","selectRest","map","item","id","Payment","total","charge","config","BASE_URL","res","afterPayment","stripeKey","CheckOutContainer","saleData","restaurant","location","category","phone_number","address","image_url","items","data","clearCart","MenuItem","handleClick","addItemToCart","MenuContainer","menu","menuItem","RestaurantContainer","restObj","categories","title","address1","rating","review_count","display_phone","transactions","isclosed","src","alt","Profile","sales","purchases","sale","nice_timestamp_for_grandma","food_items","React","Search","helpWithChange","event","handleSearchTerm","helpWithSearch","handleSearch","searchTerm","RestaurantCard","handleNav","cartIsEmpty","selectRestName","selectNewRest","city","phone","is_closed","RestaurantCollection","arrayOfRestaurants","restaurants","key","SearchContainer","string","search","ConfirmationContainer","food","order","foodOrder","App","itemName","deleteIndex","findIndex","newItemList","slice","splice","history","newUsername","newRestId","newRestName","newLocation","newCategory","newPhoneNumber","newAddress","newImageUrl","newItem","path","render","withRouter","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.df951002.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { Redirect } from 'react-router-dom'\n\nexport default class FormContainer extends Component {\n\n    state = {\n        username: \"\",\n        password: \"\",\n        redirect: false,\n        token: \"\"\n    }\n    //controlled form\n    handleChange = (e) => {\n        console.log(this.state)\n        let { name, value } = e.target\n        this.setState({\n            [name]: value\n        })\n    }\n    //on submit auth user in backend\n\n    handleRegisterSubmit = (newUser) => {\n        newUser.preventDefault()\n        fetch(`https://fifteenminute-api.herokuapp.com/users`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify(this.state)\n        })\n        .then(r => r.json())\n        .then(this.handleResponse)\n    }\n\n\n\n    //on response set page to profile page\n    handleResponse = (response) => {\n        if (response.user) {\n            localStorage.token = response.token\n            localStorage.username = response.user.username\n            this.props.handleCurrentUser(localStorage.username)\n            this.setState({\n                username: this.state.username,\n                password: this.state.password,\n                token: response.token,\n                redirect: true\n            })\n        }\n        else {\n            alert(response.error)\n          }\n    }\n\n    render() {\n        // let { formName } = this.props\n        let { username, password } = this.state\n    \n        return (\n            <div className=\"container\">\n            <form onSubmit={this.handleRegisterSubmit} >\n              <h1>Register</h1>\n              <label htmlFor=\"username\">Username:</label>\n              <input type=\"text\" name=\"username\" value={username} onChange={this.handleChange} />\n              <label htmlFor=\"password\">Password:</label>\n              <input type=\"password\" name=\"password\" value={password} onChange={this.handleChange} />\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n            {\n                this.state.redirect ? \n                <Redirect push to=\"/profile\" />\n                :\n                <p></p>\n            }\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { Redirect } from 'react-router-dom'\n\nexport default class FormContainer extends Component {\n\n    state = {\n        username: \"\",\n        password: \"\",\n        redirect: false,\n        token: \"\"\n    }\n    //controlled form\n    handleChange = (e) => {\n        console.log(this.state)\n        let { name, value } = e.target\n        this.setState({\n            [name]: value\n        })\n    }\n    //on submit auth user in backend\n\n    handleLoginSubmit = (logUser) => {\n        logUser.preventDefault()\n        fetch(`https://fifteenminute-api.herokuapp.com/login`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify(this.state)\n        })\n            .then(r => r.json())\n            .then(this.handleResponse)\n    }\n\n    //on response set page to profile page\n    handleResponse = (response) => {\n        if (response.user) {\n            localStorage.token = response.token\n            localStorage.username = response.user.username\n            this.props.handleCurrentUser(localStorage.username)\n            this.setState({\n                username: this.state.username,\n                password: this.state.password,\n                token: response.token,\n                redirect: true\n            })\n        }\n        else {\n            alert(response.error)\n        }\n    }\n\n    render() {\n        // let { formName } = this.props\n        let { username, password } = this.state\n    \n        return (\n            <div className=\"container\">\n            <form onSubmit={this.handleLoginSubmit} >\n                <h1>Login</h1>\n                <label htmlFor=\"username\">Username:</label>\n                <input type=\"text\" name=\"username\" value={username} onChange={this.handleChange} />\n                <label htmlFor=\"password\">Password:</label>\n                <input type=\"password\" name=\"password\" value={password} onChange={this.handleChange} />\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n            {\n                this.state.redirect ? \n                <Redirect push to=\"/profile\" />\n                :\n                <p></p>\n            }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom'\n\nconst NavBar = () => {\n  return(\n    <div className=\"title\">\n      Fifteen Minute Foods \n    <ul className=\"nav\">\n      <li>\n        <NavLink to=\"/cart\" className=\"navLink\">Cart</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/login\" className=\"navLink\">Login</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/register\" className=\"navLink\">Register</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/profile\" className=\"navLink\">Profile</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/search\" className=\"navLink\">Search</NavLink>\n      </li>\n    </ul>\n    </div>\n  )\n};\n\nexport default NavBar; ","import React, { Component } from 'react'\n\nexport default class CartItem extends Component {\n    onDeleteClick = () => {\n        this.props.onDeleteItem(this.props.name)\n    }\n\n\n    render() {\n        return (\n            <div className=\"cartItemContainer\">\n                <p>{this.props.name}: {this.props.price}</p>\n                <button onClick={this.onDeleteClick}>Remove</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport CartItem from '../CartComponents/CartItem.js'\nimport { NavLink } from 'react-router-dom'\n\nexport default class CartContainer extends Component {\n    state = {\n\n    }\n\n    //return sum of prices all items in cart\n    findSubtotal = () => {\n        return this.props.itemsInCart.reduce((a, b) => a + (b['price'] || 0), 0).toFixed(2)\n    }\n    //apply 8.875% tax to subtotal\n    findTotal = () => {\n        return (this.findSubtotal() * 1.08875).toFixed(2)\n    }\n\n\n    render() {\n        console.log(this.props.itemsInCart)\n        return (\n            <div className=\"container\">\n                <h1>My Cart</h1>\n                {\n                    this.props.itemsInCart.length !== 0 ?\n                        <div>\n                            <h2>{this.props.selectRest.name}</h2>\n                            <div className=\"cart\">\n                                {this.props.itemsInCart.map(item => {\n                                    return <CartItem id={item.id} name={item.name} price={item.price} onDeleteItem={this.props.onDeleteItem} />\n                                })}\n                            </div>\n                            <div className=\"totals\">\n                                <p>Subtotal: ${this.findSubtotal()}</p>\n                                <p>Tax: 8.875%</p>\n                                <p>Total: ${this.findTotal()}</p>\n                            </div>\n\n                            <NavLink to=\"/checkout\">Checkout</NavLink>\n                        </div>\n                        :\n                        <p>Cart is empty.</p>\n                }\n            </div>\n        )\n    }\n}\n","// => imports\nimport React from 'react'\nimport StripeCheckout from 'react-stripe-checkout';\n\n\n// => URLs\nconst BASE_URL = 'https://fifteenminute-api.herokuapp.com'\nconst CHARGES_URL = BASE_URL + '/charge_adapter'\n\n// => app component\nexport default function Payment(props) {\n\n    const price = props.total\n    const onToken = (token) => {\n\n        const charge = {\n            token: token.id\n        };\n\n        const config = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ charge: charge, price: price * 100 })\n        };\n\n        fetch(CHARGES_URL, config)\n            .then(res => res.json())\n            //redirect to confirmation page after payment is made\n            .then(() =>\n                {props.afterPayment()})\n    }\n\n    return (\n        <div>\n            <StripeCheckout\n                token={onToken}\n                stripeKey={'pk_test_IPcPeFrETWjmr9mFIYFwZlqn00nfwg4xZi'}\n            />\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport Payment from '../CheckoutComponents/Payment.js'\nimport { Redirect } from 'react-router-dom'\n\n\nexport default class CheckOutContainer extends Component {\n    state = {\n        redirect: false\n    }\n    //return sum of prices all items in cart\n    findSubtotal = () => {\n        return this.props.itemsInCart.reduce((a, b) => a + (b['price'] || 0), 0).toFixed(2)\n    }\n    //apply 8.875% tax to subtotal\n    findTotal = () => {\n        return (this.findSubtotal() * 1.08875).toFixed(2)\n    }\n    //after payment processed save data to backend and redirect to confirmation\n    afterPayment = () => {\n        let saleData = {\n            restaurant: {\n                name: this.props.selectRest.name,\n                location: this.props.selectRest.location,\n                category: this.props.selectRest.category,\n                phone_number: this.props.selectRest.phone_number,\n                address: this.props.selectRest.address,\n                image_url: this.props.selectRest.image_url\n            },\n            items: this.props.itemsInCart,\n            user: localStorage.username\n        }\n        //fetches\n        fetch('https://fifteenminute-api.herokuapp.com/sales', {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(saleData)\n        })\n            .then(r => r.json())\n            .then(data =>\n            {\n                console.log(data)\n                //clear cart\n                this.props.clearCart()\n                //redirect to confirmation page\n                this.setState({\n                    redirect: true\n                })\n            })\n\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <h1>Checkout</h1>\n                <h2>{this.props.selectRest.name}</h2>\n                <div className=\"totals\">\n                    <p>Subtotal: ${this.findSubtotal()}</p>\n                    <p>Tax: 8.875%</p>\n                    <p>Total: ${this.findTotal()}</p>\n                </div>\n                <Payment total={this.findTotal()} afterPayment={this.afterPayment} />\n                {\n                    this.state.redirect ?\n                        <Redirect push to='/confirmation' />\n                        :\n                        <p></p>\n                }\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class MenuItem extends Component {\n\n    handleClick = () => {\n        this.props.addItemToCart(this.props)\n    }\n    render() {\n        return (\n            <div className=\"restaurant_name\">\n                <h6 className=\"food_name\">{this.props.name}</h6>\n                <p className=\"price\">${this.props.price}</p>\n                <button onClick={this.handleClick}>Add to Cart</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport MenuItem from './MenuItem.js'\n\nexport default class MenuContainer extends Component {\n    render() {\n        return (\n            <div>\n                {\n                this.props.menu.map(menuItem => {\n                    return <MenuItem name={menuItem.name} price={menuItem.price} addItemToCart={this.props.addItemToCart}/>\n                })\n                }\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport MenuContainer from '../RestaurantComponents/MenuContainer.js'\nimport menu from '../menuItems.json'\n\nexport default class RestaurantContainer extends Component {\n    state = {\n        restObj: {\n            id: null,\n            image_url: \"\",\n            name: \"\",\n            categories: {\n                title: \"\"\n            },\n            price: \"\",\n            location: {\n                address1: \"\"\n            },\n            rating: \"\",\n            review_count: 0,\n            display_phone: \"\",\n            transactions: \"\",\n            isclosed: false\n        }\n    }\n\n    //fetch restaurant info from yelp api\n    componentDidMount() {\n        fetch(`https://fifteenminute-api.herokuapp.com/yelp_api_adapter/info?business_id=${this.props.selectRest.id}`)\n            .then(r => r.json())\n            .then(data => {\n                this.setState({\n                    restObj: data\n                })\n            });\n    }\n    \n    render() {\n        console.log(\"menu\", menu)\n        return (\n            <div className=\"container\">\n                <div className=\"image\">\n                    <img src={this.state.restObj.image_url} alt={this.state.restObj.name} />\n                </div>\n                <div className=\"restaurant-name\">\n                    <p>{this.state.restObj.name}</p>\n                </div>\n\n                <MenuContainer menu={menu} addItemToCart={this.props.addItemToCart}/>\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nexport default class Profile extends React.Component {\n\n  state = {\n    sales: []\n  }\n\n  componentDidMount() {\n    fetch(`https://fifteenminute-api.herokuapp.com/userSales`, {\n      method: \"PUT\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: this.props.username\n      })\n    })\n      .then(r => r.json())\n      .then(purchases => this.setState({\n        sales: purchases\n      }))\n  }\n\n\n\n  render() {\n    console.log(this.state.sales)\n    return (\n      <div className=\"container\">\n        <h1>Hello, {this.props.username}!</h1>\n        <h3>Past Orders: </h3>\n        <ul>\n          {this.state.sales.map(sale => {\n            return <li>\n              {sale.restaurant.name}\n                -- {\" \"}\n              {sale.nice_timestamp_for_grandma}\n              <ul>\n                {sale.food_items.map(item => {\n                  return <li className=\"past_order_list\">\n                    Item: {item.name}\n                  </li>\n                })}</ul></li>\n          })}\n        </ul>\n      </div>\n    )\n  }\n}\n\n","import React, { Component } from 'react'\n\nexport default class Search extends Component {\n\n    helpWithChange = (event) => {\n        this.props.handleSearchTerm(event.target.value)\n    }\n\n    helpWithSearch = (event) => {\n        event.preventDefault()\n        this.props.handleSearch()\n    }\n    render() {\n        return (\n            <div className=\"searchBar\">\n                <h1>Search for a Restaurant or your Favorite Foods</h1>\n                <form onSubmit={this.helpWithSearch}>\n                    <input type=\"text\" onChange={this.helpWithChange} value={this.props.searchTerm} />\n                    <input type=\"submit\" value=\"Submit\"/>\n                </form>\n            </div>\n        )\n    }\n}\n\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\n\nexport default class RestaurantCard extends React.Component {\n    state = {\n        redirect: false\n    }\n\n    handleNav = () => {\n        if (!this.props.cartIsEmpty && this.props.restaurant.name !== this.props.selectRestName) {\n            alert(\"Please place your order or empty your cart!\")\n        }\n        else {\n            this.props.selectNewRest(this.props.restaurant.id,\n                this.props.restaurant.name,\n                this.props.restaurant.location.city,\n                this.props.restaurant.categories[0].title,\n                this.props.restaurant.phone,\n                this.props.restaurant.location.address1,\n                this.props.restaurant.image_url)\n            this.setState({\n                redirect: true\n            })\n        }\n\n    }\n\n\n    render() {\n        //fill out with the rest of the restaurant info\n        let restObj = this.props.restaurant\n        return (\n            <div className=\"card-container\" >\n                <div className=\"rest-img\">\n                        <img src={restObj.image_url} alt={restObj.name} />\n                </div>\n                <div className=\"top-card\">\n                \n                    <div>\n                        <p>{restObj.name}</p>\n                    </div>\n                    <div>\n                        <p>{restObj.categories[0].title} </p>\n                    </div>\n                    <div>\n                        <p>{restObj.price}</p>\n                    </div>\n                </div>\n                <div className=\"bottom-card\">\n                    <div>\n                        <p>{restObj.location.address1}</p>\n                    </div>\n                    <div>\n                        <p>Rating: {restObj.rating}</p>\n                    </div>\n                    <div>\n                        <p>{restObj.display_phone}</p>\n                    </div>\n                    <div>\n                        {restObj.is_closed ? <h2>HAHA WE CLOSED</h2> : <button onClick={this.handleNav}>Go to Restaurant</button>}\n                    </div>\n                </div>\n                {\n                    this.state.redirect ?\n                        <Redirect push to='/restaurant' />\n                        :\n                        <></>\n                }\n\n            </div>\n        )\n    }\n}","import React from 'react'\nimport RestaurantCard from './RestaurantCard'\n\nexport default class RestaurantCollection extends React.Component {\n\n    render() {\n        let arrayOfRestaurants = this.props.restaurants.map(restaurant => {\n            return <RestaurantCard key={restaurant.id} restaurant={restaurant} selectNewRest={this.props.selectNewRest} cartIsEmpty={this.props.cartIsEmpty} selectRestName={this.props.selectRestName}/>\n        })\n        \n        return (\n            <div  className=\"container\" id=\"restaurant-container\">\n                {arrayOfRestaurants}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Search from './Search'\nimport RestaurantCollection from './RestaurantCollection'\n\n\n\nexport default class SearchContainer extends React.Component {\n    state = {\n        searchTerm: \"\",\n        restaurants: [],\n    }\n\n    //set state when search input changes\n    handleSearchTerm = (string) => {\n        this.setState({\n            searchTerm: string\n        })\n    }\n    //perform search through yelp api\n    handleSearch = () => {\n        const search = this.state.searchTerm\n        fetch(`https://fifteenminute-api.herokuapp.com/yelp_api_adapter/search?term=${search}`)\n            .then(r => r.json())\n            .then(data => {\n                this.setState({\n                    restaurants: data\n                })\n            });\n            console.log(this.state)\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Search searchTerm={this.state.searchTerm} handleSearchTerm={this.handleSearchTerm} handleSearch={this.handleSearch}/>\n                <RestaurantCollection restaurants={this.state.restaurants} selectNewRest={this.props.selectNewRest} cartIsEmpty={this.props.cartIsEmpty} selectRestName={this.props.selectRestName} />\n            </div>\n\n        )\n    }\n}\n\n","import React, { Component } from 'react'\n\nexport default class ConfirmationContainer extends Component {\n\n    state = {\n        restaurant: \"\",\n        food: []\n    }\n\n\n\n    componentDidMount() {\n        fetch(\"https://fifteenminute-api.herokuapp.com/confirm\")\n            .then(r => r.json())\n            .then(order => {\n                this.setState({\n                    restaurant: order.restaurant.name,\n                    food: order.food_items\n                })\n            })\n    }\n\n    render() {\n        // console.log(this.state.restaurant)\n        let foodOrder = this.state.food\n        return (\n            <div className=\"container\">\n                <h1>Thank you {localStorage.username}!</h1>\n                <h2>for your order of</h2>\n                <ul>{foodOrder.map(food => {\n                    return <li className=\"confirmation-food\">{food.name}</li>\n                })}</ul>\n                <h2>from</h2>\n                <h1>{this.state.restaurant}</h1>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport './App.css';\nimport RegisterFormContainer from './Containers/RegisterFormContainer.js'\nimport FormContainer from './Containers/FormContainer.js'\nimport NavBar from './Components/NavBar'\nimport { withRouter } from 'react-router-dom'\nimport CartContainer from './Containers/CartContainer.js'\nimport CheckOutContainer from './Containers/CheckOutContainer.js'\nimport RestaurantContainer from './Containers/RestaurantContainer.js'\nimport ProfileContainer from './Containers/ProfileContainer.js'\nimport SearchContainer from './Components/SearchFiles/SearchContainer.jsx'\nimport ConfirmationContainer from './Containers/ConfirmationContainer.js'\nclass App extends React.Component {\n    state = {\n        user: {\n            username: \"\",\n            id: 0\n        },\n        token: \"\",\n        selectRest: {\n            id: \"\",\n            name: \"\",\n            location: \"\",\n            category: \"\",\n            phone_number: \"\",\n            address: \"\",\n            image_url: \"\"\n        },\n        itemsInCart: []\n    }\n\n\n    //delete item by id passed up from CartItem\n    onDeleteItem = (itemName) => {\n        let deleteIndex = this.state.itemsInCart.findIndex(item => item.name === itemName)\n        let newItemList = this.state.itemsInCart.slice()\n        newItemList.splice(deleteIndex, 1)\n        this.setState({\n            itemsInCart: newItemList\n        })\n    }\n    componentDidMount() {\n        if (localStorage.token) {\n            fetch(`http://localhost:3000/persist`, {\n                headers: {\n                    'Authorization': `Bearer ${localStorage.token}`\n                }\n            })\n                .then(r => r.json())\n                .then(this.handleResponse)\n        }\n    }\n\n    handleResponse = (response) => {\n        if (response.user) {\n            localStorage.username = response.user.username\n            localStorage.token = response.token\n            this.setState(response, () => {\n                this.props.history.push(\"/profile\")\n            })\n        }\n    }\n    //set username to current user\n    handleCurrentUser = (newUsername) => {\n        this.setState({\n            username: newUsername\n        })\n    }\n\n    //change selected restaurant\n    selectNewRest = (newRestId, newRestName, newLocation, newCategory, newPhoneNumber, newAddress, newImageUrl) => {\n        this.setState({\n            selectRest: {\n                id: newRestId,\n                name: newRestName,\n                location: newLocation,\n                category: newCategory,\n                phone_number: newPhoneNumber,\n                address: newAddress,\n                image_url: newImageUrl\n            }\n        })\n    }\n    //adds item to cart\n    addItemToCart = newItem => {\n        this.setState({\n            itemsInCart: [...this.state.itemsInCart, newItem]\n        })\n    }\n    //wipe cart and seleted restaurants\n    clearCart = () => {\n        this.setState({\n            selectRest: {\n                id: \"\",\n                name: \"\",\n                location: \"\",\n            category: \"\",\n            phone_number: \"\",\n            address: \"\",\n            image_url: \"\"\n            },\n            itemsInCart: []\n        })\n    }\n\n\n    render() {\n        return (\n            <div className=\"App\">\n                <NavBar />\n                <header className=\"App-header\">\n                    <Switch>\n                        <Route path=\"/login\" render={() => <FormContainer handleCurrentUser={this.handleCurrentUser} />} />\n                        <Route path=\"/register\" render={() => <RegisterFormContainer handleCurrentUser={this.handleCurrentUser} />} />\n                        <Route path=\"/profile\" render={() => <ProfileContainer username={localStorage.username} />} />\n                        <Route path=\"/cart\" render={() => <CartContainer onDeleteItem={this.onDeleteItem} itemsInCart={this.state.itemsInCart} selectRest={this.state.selectRest} />} />\n                        <Route path=\"/checkout\" render={() => <CheckOutContainer  username={localStorage.username} itemsInCart={this.state.itemsInCart} selectRest={this.state.selectRest} clearCart={this.clearCart} />} />\n                        <Route path='/search' render={() => <SearchContainer selectNewRest={this.selectNewRest} cartIsEmpty={this.state.itemsInCart.length === 0} selectRestName={this.state.selectRest.name}/>} />\n                        <Route path='/restaurant' render={() => <RestaurantContainer selectRest={this.state.selectRest} addItemToCart={this.addItemToCart} />} />\n                        <Route path='/confirmation' render={() => <ConfirmationContainer selectRest={this.state.selectRest} selectRest={this.selectRest} itemsInCart={this.itemsInCart} />} />\n                    </Switch>\n                </header>\n            </div>\n        );\n    }\n}\nexport default withRouter(App);\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}